root = tk.Tk()
root.title('Scenarios Mosaic')

# Creation of tabs
tabControl = ttk.Notebook(root)
tab1 = ttk.Frame(tabControl)
tab2 = ttk.Frame(tabControl)

#  Configuration of tabs

tabControl.add(tab1, text='Scenario groups')
tabControl.add(tab2, text='Scenario datalabels')
tabControl.pack(expand=1, fill="both")

root.geometry('1100x700')

# Create left and right frames for both tabs

left_frame = tk.Frame(tab1)
left_frame.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=3, pady=3)

right_frame = tk.Frame(tab1)
right_frame.pack(side=tk.RIGHT, fill=tk.BOTH, expand=True, padx=3, pady=3)

left_frame_2 = tk.Frame(tab2)
left_frame_2.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=3, pady=3)

right_frame_2 = tk.Frame(tab2)
right_frame_2.pack(side=tk.RIGHT, fill=tk.BOTH, expand=True, padx=3, pady=3)

# Setup of an empty list to store filter blocks and Listbox
filter_blocks = []
Listbox = []

# Add filter blocks to the left frame and filtering out Active status column
for column in data2.columns:
    if column != 'active':
        listbox = add_filter_block(left_frame, column, data2[column].unique())
        filter_blocks.append((column, listbox))

# Display filtered data result
result_text = tk.Text(right_frame, wrap=tk.NONE, state=tk.DISABLED)
# Summary label
summary_label = tk.Label(right_frame, text='', wraplength=300)

# Filter button for data
filter_button = tk.Button(left_frame, text='Filter Data', command=partial(display_filtered_data, data2, filter_blocks))
filter_button.pack(ipadx=40, ipady=10, padx=10, pady=10)

# Export data button
export_button = tk.Button(left_frame, text='Export Data', command=partial(export_filtered_data, data2, filter_blocks))
export_button.pack(ipadx=40, ipady=10, padx=10, pady=10)

# Clear filters button
clear_button = tk.Button(left_frame, text='Clear Filters', command=clear_filters)
clear_button.pack(ipadx=40, ipady=10, padx=10, pady=10)

# Display filtered data result
result_text = tk.Text(right_frame, wrap=tk.NONE, state=tk.DISABLED)
result_text.pack(fill=tk.BOTH, expand=True)

# Summary label
summary_label = tk.Label(right_frame, text='', wraplength=300)
summary_label.pack()
