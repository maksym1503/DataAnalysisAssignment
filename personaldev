# Create the main Tkinter window
root = tk.Tk()
root.title('Scenarios Mosaic')

# Creation of tabs
tabControl = ttk.Notebook(root)
tab1 = ttk.Frame(tabControl)
tab2 = ttk.Frame(tabControl)

# Configuration of tabs
tabControl.add(tab1, text='Scenario groups')
tabControl.add(tab2, text='Scenario datalabels')
tabControl.pack(expand=1, fill="both")

root.geometry('1100x700')

# Create left and right frames for both tabs
left_frame = tk.Frame(tab1)
left_frame.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=3, pady=3)

right_frame = tk.Frame(tab1)
right_frame.pack(side=tk.RIGHT, fill=tk.BOTH, expand=True, padx=3, pady=3)

# Add filter blocks to the left frame and filtering out Active status column
for column in data2.columns:
    if column != 'active':
        listbox_frame = tk.Frame(left_frame)
        listbox_frame.pack(side=tk.TOP, fill=tk.BOTH, expand=True)

        # Create a Listbox with a vertical scrollbar
        label = tk.Label(listbox_frame, text=column)
        label.pack()

        listbox = tk.Listbox(listbox_frame, selectmode=tk.MULTIPLE, height=len(data2[column].unique()))
        for value in data2[column].unique():
            listbox.insert(tk.END, value)
        listbox.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)

        scrollbar = Scrollbar(listbox_frame, command=listbox.yview)
        scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
        listbox.config(yscrollcommand=scrollbar.set)

# Display filtered data result with vertical scrollbar
result_text = tk.Text(right_frame, wrap=tk.NONE, state=tk.DISABLED)
result_text.pack(fill=tk.BOTH, expand=True)

# Create a vertical scrollbar and attach it to the result_text widget
scrollbar = Scrollbar(right_frame, command=result_text.yview)
scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
result_text.config(yscrollcommand=scrollbar.set)

# Filter button for data
filter_button = tk.Button(left_frame, text='Filter Data', command=lambda: display_filtered_data(data2, filter_blocks))
filter_button.pack(ipadx=40, ipady=10, padx=10, pady=10)

# Export data button
export_button = tk.Button(left_frame, text='Export Data', command=lambda: export_filtered_data(data2, filter_blocks))
export_button.pack(ipadx=40, ipady=10, padx=10, pady=10)

# Clear filters button
clear_button = tk.Button(left_frame, text='Clear Filters', command=clear_filters)
clear_button.pack(ipadx=40, ipady=10, padx=10, pady=10)

# Run the Tkinter event loop
root.mainloop()
